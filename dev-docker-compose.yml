version: '3.9'

services:
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 3004:80
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    ports:
      - 3003:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./server
      args:
        - DATABASE_URL=${DATABASE_URL}
    container_name: backend
    ports:
      - 3001:3001
      - 3002:5555
    environment:
      - CLIENT_URL=${CLIENT_URL}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - MAIL_SERVICE=${MAIL_SERVICE}
      - MAIL_SERVER_HOST=${MAIL_SERVER_HOST}
      - MAIL_SERVER_PORT=${MAIL_SERVER_PORT}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      pgadmin:
        condition: service_started
    command: ['sh', '-c', 'npx prisma migrate dev --name init && npm start']
    volumes:
      - ./server:/app:delegated
    healthcheck:
      test: ['CMD', 'wget', '-O', '-', 'http://backend:3001']
      interval: 10s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./client
      dockerfile: dev-Dockerfile
      args:
        - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
    container_name: frontend
    environment:
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
    ports:
      - 3000:3000
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./client:/app:delegated
    command: ['npm', 'run', 'dev']

volumes:
  postgres_data:
